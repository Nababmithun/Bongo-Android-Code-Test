// Generated by Dagger (https://google.github.io/dagger).
package com.movieplayer.base_mvvm.ui.activity.movie;

import com.movieplayer.base_mvvm.base.BaseViewModel_MembersInjector;
import com.movieplayer.base_mvvm.data.remote.api_service.TheMovieDbApiService;
import com.movieplayer.base_mvvm.rx.AppSchedulerProvider;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class PopularMoviesViewModel_Factory implements Factory<PopularMoviesViewModel> {
  private final Provider<AppSchedulerProvider> appSchedulerProvider;

  private final Provider<TheMovieDbApiService> theMovieDbApiServiceProvider;

  public PopularMoviesViewModel_Factory(
      Provider<AppSchedulerProvider> appSchedulerProvider,
      Provider<TheMovieDbApiService> theMovieDbApiServiceProvider) {
    this.appSchedulerProvider = appSchedulerProvider;
    this.theMovieDbApiServiceProvider = theMovieDbApiServiceProvider;
  }

  @Override
  public PopularMoviesViewModel get() {
    PopularMoviesViewModel instance = new PopularMoviesViewModel();
    BaseViewModel_MembersInjector.injectAppSchedulerProvider(instance, appSchedulerProvider.get());
    PopularMoviesViewModel_MembersInjector.injectTheMovieDbApiService(
        instance, theMovieDbApiServiceProvider.get());
    return instance;
  }

  public static PopularMoviesViewModel_Factory create(
      Provider<AppSchedulerProvider> appSchedulerProvider,
      Provider<TheMovieDbApiService> theMovieDbApiServiceProvider) {
    return new PopularMoviesViewModel_Factory(appSchedulerProvider, theMovieDbApiServiceProvider);
  }

  public static PopularMoviesViewModel newPopularMoviesViewModel() {
    return new PopularMoviesViewModel();
  }
}

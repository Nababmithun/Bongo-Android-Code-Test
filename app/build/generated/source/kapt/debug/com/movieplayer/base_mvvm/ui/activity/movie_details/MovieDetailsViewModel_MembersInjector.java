// Generated by Dagger (https://google.github.io/dagger).
package com.movieplayer.base_mvvm.ui.activity.movie_details;

import com.movieplayer.base_mvvm.base.BaseViewModel_MembersInjector;
import com.movieplayer.base_mvvm.data.remote.api_service.TheMovieDbApiService;
import com.movieplayer.base_mvvm.rx.AppSchedulerProvider;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class MovieDetailsViewModel_MembersInjector
    implements MembersInjector<MovieDetailsViewModel> {
  private final Provider<AppSchedulerProvider> appSchedulerProvider;

  private final Provider<TheMovieDbApiService> theMovieDbApiServiceProvider;

  public MovieDetailsViewModel_MembersInjector(
      Provider<AppSchedulerProvider> appSchedulerProvider,
      Provider<TheMovieDbApiService> theMovieDbApiServiceProvider) {
    this.appSchedulerProvider = appSchedulerProvider;
    this.theMovieDbApiServiceProvider = theMovieDbApiServiceProvider;
  }

  public static MembersInjector<MovieDetailsViewModel> create(
      Provider<AppSchedulerProvider> appSchedulerProvider,
      Provider<TheMovieDbApiService> theMovieDbApiServiceProvider) {
    return new MovieDetailsViewModel_MembersInjector(
        appSchedulerProvider, theMovieDbApiServiceProvider);
  }

  @Override
  public void injectMembers(MovieDetailsViewModel instance) {
    BaseViewModel_MembersInjector.injectAppSchedulerProvider(instance, appSchedulerProvider.get());
    injectTheMovieDbApiService(instance, theMovieDbApiServiceProvider.get());
  }

  public static void injectTheMovieDbApiService(
      MovieDetailsViewModel instance, TheMovieDbApiService theMovieDbApiService) {
    instance.theMovieDbApiService = theMovieDbApiService;
  }
}

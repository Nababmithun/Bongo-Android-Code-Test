// Generated by Dagger (https://google.github.io/dagger).
package com.movieplayer.base_mvvm.base;

import androidx.lifecycle.ViewModelProvider;
import com.movieplayer.base_mvvm.data.local.SharedPrefManager;
import com.movieplayer.base_mvvm.utils.AlertService;
import com.movieplayer.base_mvvm.utils.AppLogger;
import com.movieplayer.base_mvvm.utils.NetworkUtils;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class BaseFragment_MembersInjector<V extends BaseViewModel>
    implements MembersInjector<BaseFragment<V>> {
  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  private final Provider<AlertService> mAlertServiceProvider;

  private final Provider<NetworkUtils> mNetworkUtilsProvider;

  private final Provider<AppLogger> mAppLoggerProvider;

  private final Provider<SharedPrefManager> mPrefManagerProvider;

  public BaseFragment_MembersInjector(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<AlertService> mAlertServiceProvider,
      Provider<NetworkUtils> mNetworkUtilsProvider,
      Provider<AppLogger> mAppLoggerProvider,
      Provider<SharedPrefManager> mPrefManagerProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.mAlertServiceProvider = mAlertServiceProvider;
    this.mNetworkUtilsProvider = mNetworkUtilsProvider;
    this.mAppLoggerProvider = mAppLoggerProvider;
    this.mPrefManagerProvider = mPrefManagerProvider;
  }

  public static <V extends BaseViewModel> MembersInjector<BaseFragment<V>> create(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<AlertService> mAlertServiceProvider,
      Provider<NetworkUtils> mNetworkUtilsProvider,
      Provider<AppLogger> mAppLoggerProvider,
      Provider<SharedPrefManager> mPrefManagerProvider) {
    return new BaseFragment_MembersInjector<V>(
        viewModelFactoryProvider,
        mAlertServiceProvider,
        mNetworkUtilsProvider,
        mAppLoggerProvider,
        mPrefManagerProvider);
  }

  @Override
  public void injectMembers(BaseFragment<V> instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectMAlertService(instance, mAlertServiceProvider.get());
    injectMNetworkUtils(instance, mNetworkUtilsProvider.get());
    injectMAppLogger(instance, mAppLoggerProvider.get());
    injectMPrefManager(instance, mPrefManagerProvider.get());
  }

  public static <V extends BaseViewModel> void injectViewModelFactory(
      BaseFragment<V> instance, ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }

  public static <V extends BaseViewModel> void injectMAlertService(
      BaseFragment<V> instance, AlertService mAlertService) {
    instance.mAlertService = mAlertService;
  }

  public static <V extends BaseViewModel> void injectMNetworkUtils(
      BaseFragment<V> instance, NetworkUtils mNetworkUtils) {
    instance.mNetworkUtils = mNetworkUtils;
  }

  public static <V extends BaseViewModel> void injectMAppLogger(
      BaseFragment<V> instance, AppLogger mAppLogger) {
    instance.mAppLogger = mAppLogger;
  }

  public static <V extends BaseViewModel> void injectMPrefManager(
      BaseFragment<V> instance, SharedPrefManager mPrefManager) {
    instance.mPrefManager = mPrefManager;
  }
}

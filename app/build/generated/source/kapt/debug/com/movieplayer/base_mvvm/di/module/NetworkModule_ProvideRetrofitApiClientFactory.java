// Generated by Dagger (https://google.github.io/dagger).
package com.movieplayer.base_mvvm.di.module;

import android.content.Context;
import com.movieplayer.base_mvvm.data.local.SharedPrefManager;
import com.movieplayer.base_mvvm.utils.NetworkUtils;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class NetworkModule_ProvideRetrofitApiClientFactory implements Factory<Retrofit> {
  private final NetworkModule module;

  private final Provider<Context> contextProvider;

  private final Provider<NetworkUtils> networkUtilsProvider;

  private final Provider<SharedPrefManager> preferenceManagerProvider;

  public NetworkModule_ProvideRetrofitApiClientFactory(
      NetworkModule module,
      Provider<Context> contextProvider,
      Provider<NetworkUtils> networkUtilsProvider,
      Provider<SharedPrefManager> preferenceManagerProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.networkUtilsProvider = networkUtilsProvider;
    this.preferenceManagerProvider = preferenceManagerProvider;
  }

  @Override
  public Retrofit get() {
    return Preconditions.checkNotNull(
        module.provideRetrofitApiClient(
            contextProvider.get(), networkUtilsProvider.get(), preferenceManagerProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static NetworkModule_ProvideRetrofitApiClientFactory create(
      NetworkModule module,
      Provider<Context> contextProvider,
      Provider<NetworkUtils> networkUtilsProvider,
      Provider<SharedPrefManager> preferenceManagerProvider) {
    return new NetworkModule_ProvideRetrofitApiClientFactory(
        module, contextProvider, networkUtilsProvider, preferenceManagerProvider);
  }

  public static Retrofit proxyProvideRetrofitApiClient(
      NetworkModule instance,
      Context context,
      NetworkUtils networkUtils,
      SharedPrefManager preferenceManager) {
    return Preconditions.checkNotNull(
        instance.provideRetrofitApiClient(context, networkUtils, preferenceManager),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
